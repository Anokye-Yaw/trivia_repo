{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANOKYE\\\\desktop\\\\flask_app\\\\trivia_project\\\\frontend\\\\src\\\\components\\\\QuestionView.js\";\nimport React, { Component } from 'react';\nimport '../stylesheets/App.css';\nimport Question from './Question';\nimport Search from './Search';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuestionView extends Component {\n  constructor() {\n    super();\n\n    this.getQuestions = () => {\n      $.ajax({\n        url: `/questions?page=${this.state.page}`,\n        //TODO: update request URL\n        type: 'GET',\n        success: result => {\n          this.setState({\n            questions: result.questions,\n            totalQuestions: result.total_questions,\n            categories: result.categories,\n            currentCategory: result.current_category\n          });\n          return;\n        },\n        error: error => {\n          alert('Unable to load questions. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    this.getByCategory = id => {\n      $.ajax({\n        url: `/categories/${id}/questions`,\n        //TODO: update request URL\n        type: 'GET',\n        success: result => {\n          this.setState({\n            questions: result.questions,\n            totalQuestions: result.total_questions,\n            currentCategory: result.current_category\n          });\n          return;\n        },\n        error: error => {\n          alert('Unable to load questions. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    this.submitSearch = searchTerm => {\n      $.ajax({\n        url: `/questions`,\n        //TODO: update request URL\n        type: 'POST',\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          searchTerm: searchTerm\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: result => {\n          this.setState({\n            questions: result.questions,\n            totalQuestions: result.total_questions,\n            currentCategory: result.current_category\n          });\n          return;\n        },\n        error: error => {\n          alert('Unable to load questions. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    this.questionAction = id => action => {\n      if (action === 'DELETE') {\n        if (window.confirm('are you sure you want to delete the question?')) {\n          $.ajax({\n            url: `/questions/${id}`,\n            //TODO: update request URL\n            type: 'DELETE',\n            success: result => {\n              this.getQuestions();\n            },\n            error: error => {\n              alert('Unable to load questions. Please try your request again');\n              return;\n            }\n          });\n        }\n      }\n    };\n\n    this.state = {\n      questions: [],\n      page: 1,\n      totalQuestions: 0,\n      categories: {},\n      currentCategory: null\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  selectPage(num) {\n    this.setState({\n      page: num\n    }, () => this.getQuestions());\n  }\n\n  createPagination() {\n    let pageNumbers = [];\n    let maxPage = Math.ceil(this.state.totalQuestions / 10);\n\n    for (let i = 1; i <= maxPage; i++) {\n      pageNumbers.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `page-num ${i === this.state.page ? 'active' : ''}`,\n        onClick: () => {\n          this.selectPage(i);\n        },\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this));\n    }\n\n    return pageNumbers;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => {\n            this.getQuestions();\n          },\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.keys(this.state.categories).map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              this.getByCategory(id);\n            },\n            children: [this.state.categories[id], /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"category\",\n              alt: `${this.state.categories[id].toLowerCase()}`,\n              src: `${this.state.categories[id].toLowerCase()}.svg`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Search, {\n          submitSearch: this.submitSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), this.state.questions.map((q, ind) => /*#__PURE__*/_jsxDEV(Question, {\n          question: q.question,\n          answer: q.answer,\n          category: this.state.categories[q.category],\n          difficulty: q.difficulty,\n          questionAction: this.questionAction(q.id)\n        }, q.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-menu\",\n          children: this.createPagination()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default QuestionView;","map":{"version":3,"names":["React","Component","Question","Search","$","QuestionView","constructor","getQuestions","ajax","url","state","page","type","success","result","setState","questions","totalQuestions","total_questions","categories","currentCategory","current_category","error","alert","getByCategory","id","submitSearch","searchTerm","dataType","contentType","data","JSON","stringify","xhrFields","withCredentials","crossDomain","questionAction","action","window","confirm","componentDidMount","selectPage","num","createPagination","pageNumbers","maxPage","Math","ceil","i","push","render","Object","keys","map","toLowerCase","q","ind","question","answer","category","difficulty"],"sources":["C:/Users/ANOKYE/desktop/flask_app/trivia_project/frontend/src/components/QuestionView.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport '../stylesheets/App.css';\r\nimport Question from './Question';\r\nimport Search from './Search';\r\nimport $ from 'jquery';\r\n\r\nclass QuestionView extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      questions: [],\r\n      page: 1,\r\n      totalQuestions: 0,\r\n      categories: {},\r\n      currentCategory: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n\r\n  getQuestions = () => {\r\n    $.ajax({\r\n      url: `/questions?page=${this.state.page}`, //TODO: update request URL\r\n      type: 'GET',\r\n      success: (result) => {\r\n        this.setState({\r\n          questions: result.questions,\r\n          totalQuestions: result.total_questions,\r\n          categories: result.categories,\r\n          currentCategory: result.current_category,\r\n        });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load questions. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  };\r\n\r\n  selectPage(num) {\r\n    this.setState({ page: num }, () => this.getQuestions());\r\n  }\r\n\r\n  createPagination() {\r\n    let pageNumbers = [];\r\n    let maxPage = Math.ceil(this.state.totalQuestions / 10);\r\n    for (let i = 1; i <= maxPage; i++) {\r\n      pageNumbers.push(\r\n        <span\r\n          key={i}\r\n          className={`page-num ${i === this.state.page ? 'active' : ''}`}\r\n          onClick={() => {\r\n            this.selectPage(i);\r\n          }}\r\n        >\r\n          {i}\r\n        </span>\r\n      );\r\n    }\r\n    return pageNumbers;\r\n  }\r\n\r\n  getByCategory = (id) => {\r\n    $.ajax({\r\n      url: `/categories/${id}/questions`, //TODO: update request URL\r\n      type: 'GET',\r\n      success: (result) => {\r\n        this.setState({\r\n          questions: result.questions,\r\n          totalQuestions: result.total_questions,\r\n          currentCategory: result.current_category,\r\n        });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load questions. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  };\r\n\r\n  submitSearch = (searchTerm) => {\r\n    $.ajax({\r\n      url: `/questions`, //TODO: update request URL\r\n      type: 'POST',\r\n      dataType: 'json',\r\n      contentType: 'application/json',\r\n      data: JSON.stringify({ searchTerm: searchTerm }),\r\n      xhrFields: {\r\n        withCredentials: true,\r\n      },\r\n      crossDomain: true,\r\n      success: (result) => {\r\n        this.setState({\r\n          questions: result.questions,\r\n          totalQuestions: result.total_questions,\r\n          currentCategory: result.current_category,\r\n        });\r\n        return;\r\n      },\r\n      error: (error) => {\r\n        alert('Unable to load questions. Please try your request again');\r\n        return;\r\n      },\r\n    });\r\n  };\r\n\r\n  questionAction = (id) => (action) => {\r\n    if (action === 'DELETE') {\r\n      if (window.confirm('are you sure you want to delete the question?')) {\r\n        $.ajax({\r\n          url: `/questions/${id}`, //TODO: update request URL\r\n          type: 'DELETE',\r\n          success: (result) => {\r\n            this.getQuestions();\r\n          },\r\n          error: (error) => {\r\n            alert('Unable to load questions. Please try your request again');\r\n            return;\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='question-view'>\r\n        <div className='categories-list'>\r\n          <h2\r\n            onClick={() => {\r\n              this.getQuestions();\r\n            }}\r\n          >\r\n            Categories\r\n          </h2>\r\n          <ul>\r\n            {Object.keys(this.state.categories).map((id) => (\r\n              <li\r\n                key={id}\r\n                onClick={() => {\r\n                  this.getByCategory(id);\r\n                }}\r\n              >\r\n                {this.state.categories[id]}\r\n                <img\r\n                  className='category'\r\n                  alt={`${this.state.categories[id].toLowerCase()}`}\r\n                  src={`${this.state.categories[id].toLowerCase()}.svg`}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <Search submitSearch={this.submitSearch} />\r\n        </div>\r\n        <div className='questions-list'>\r\n          <h2>Questions</h2>\r\n          {this.state.questions.map((q, ind) => (\r\n            <Question\r\n              key={q.id}\r\n              question={q.question}\r\n              answer={q.answer}\r\n              category={this.state.categories[q.category]}\r\n              difficulty={q.difficulty}\r\n              questionAction={this.questionAction(q.id)}\r\n            />\r\n          ))}\r\n          <div className='pagination-menu'>{this.createPagination()}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}